<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>

    <!--配置事务管理器（必须先把对象先放到spring容器，这里是扫描的，否则事务管理失效）-->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!--
        <property name="filters" value="${druid.filters}" />-->
        <!--<property name="connectionProperties" value="${druid.connectionProperties}" />-->
        <property name="initialSize" value="${druid.initialSize}" />
        <property name="minIdle" value="${druid.minIdle}" />
        <property name="maxActive" value="${druid.maxActive}" />
        <property name="maxWait" value="${druid.maxWait}" />
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${druid.validationQuery}" />
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
        <property name="testOnReturn" value="${druid.testOnReturn}" />
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
        <property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
        <!--<property name="removeAbandoned" value="${druid.removeAbandoned}" />-->
        <!--<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />-->
        <!--<property name="logAbandoned" value="${druid.logAbandoned}" />-->
    </bean>



    <!-- 事务管理器配置 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>



    <!-- 配置mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.xpjz.wechat"/>

        <!--<property name="typeAliasesSuperType" value="com.xpjzh.common.entitys.BaseEntity"/>-->
        <!--<property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml" />-->
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="/WEB-INF/mybatis/*/*.xml" />
    </bean>


    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xpjz.wechat"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="annotationClass" value="com.xpjz.common.persistence.annotation.MyBatisDao"/>
    </bean>



</beans>